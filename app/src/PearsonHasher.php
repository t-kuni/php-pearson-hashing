<?php

namespace TKuni\PhpPearsonHashing;


class PearsonHasher
{
    public function __construct()
    {
        $this->table = [
            21, 82, 97, 2, 7, 90, 35, 230, 160, 206, 67, 104, 125, 24, 91, 65,
            138, 32, 171, 106, 124, 42, 208, 132, 44, 19, 149, 180, 56, 197, 156,
            71, 216, 14, 3, 70, 243, 12, 109, 63, 86, 131, 207, 29, 179, 102, 228,
            110, 134, 73, 189, 27, 223, 20, 200, 222, 80, 11, 240, 88, 209, 49, 58,
            202, 232, 48, 69, 101, 64, 235, 25, 98, 212, 120, 225, 37, 76, 219, 45,
            77, 38, 100, 233, 122, 255, 140, 205, 62, 139, 39, 244, 249, 201, 245, 54,
            115, 18, 184, 30, 183, 121, 99, 66, 229, 107, 151, 81, 4, 153, 129, 148,
            79, 117, 254, 221, 182, 130, 226, 248, 178, 236, 146, 163, 50, 137, 166, 213,
            187, 191, 36, 154, 105, 59, 224, 185, 188, 186, 16, 75, 13, 198, 84, 141,
            113, 193, 52, 72, 147, 227, 252, 157, 195, 170, 28, 126, 51, 218, 112, 167,
            94, 162, 164, 17, 93, 41, 237, 127, 158, 168, 199, 123, 159, 177, 152, 133,
            9, 181, 60, 174, 215, 155, 96, 6, 118, 210, 247, 128, 0, 46, 250, 234,
            145, 43, 176, 22, 5, 61, 74, 204, 89, 173, 26, 33, 23, 1, 214, 196,
            103, 246, 175, 142, 85, 116, 57, 55, 251, 87, 15, 241, 192, 53, 31, 144,
            239, 172, 92, 136, 194, 150, 161, 203, 47, 211, 108, 190, 10, 253, 68, 34,
            165, 231, 83, 114, 111, 238, 40, 242, 220, 8, 95, 217, 78, 169, 143, 135, 119
        ];
    }

    public function hash($length, $data, $raw_output = false)
    {
        $result = '';

        for ($byte = 0; $byte < $length; $byte++) {
            $h = $this->table[(ord($data[0]) + $byte) % 256];
            for ($i = 1; $i < strlen($data); $i++) {
                $c = ord($data[$i]);
                $h = $this->table[$h ^ $c];
            }
			$result .= pack('C1', $h);
        }

        return $raw_output ? $result : bin2hex($result);
    }
}